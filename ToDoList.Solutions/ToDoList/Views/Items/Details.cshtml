@{
  Layout = "_Layout";
}

@model ToDoList.Models.Item

<h2>Item Details</h2>

<hr />
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description) | @Html.DisplayName("Task Complete :") @Html.DisplayFor(model => model.ItemComplete)</h3>

@if(Model.JoinEntities.Count == 0)
{
  <p>This Item does not have a category yet!</p>
}
else
{
  <h4>Categories this item belongs to:</h4>
  <ul>
    @foreach(var join in Model.JoinEntities)
    {
      <li>@join.Category.Name</li>
      @using (Html.BeginForm("DeleteCategory", "Items"))
      {
        @Html.Hidden("joinId", @join.CategoryItemId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
  <h4>Mark this Item as complete/incomplete</h4>
  @using (Html.BeginForm("MarkComplete", "Items"))
  {
    @Html.HiddenFor(model => model.ItemId)
    @Html.Label("Task Complete?")
    @Html.EditorFor(model => model.ItemComplete)
    <button type="submit" class="btn btn-success" value = "Save">Change complete</button>
  }
}

<p>@Html.ActionLink("Back to List", "Index")</p>
<p>@Html.ActionLink("Add a Category", "AddCategory", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Edit Item", "Edit", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Delete Item", "Delete", new { id = Model.ItemId})</p>